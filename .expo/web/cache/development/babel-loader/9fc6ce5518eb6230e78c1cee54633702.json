{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\34628\\\\Desktop\\\\Apps\\\\padel-torunaments\\\\components\\\\user\\\\CreateTournament.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ScrollView, TextInput } from 'react-native-gesture-handler';\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport BackgroundImage from \"../common/BackgroundImage\";\nimport StyledButton from \"../common/StyledButton\";\nimport commonStyles from \"../common/styles\";\n\nvar CreateTournament = function CreateTournament(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      participante = _useState2[0],\n      setParticipante = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      participantes = _useState4[0],\n      setParticipantes = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      reload = _useState6[0],\n      setReload = _useState6[1];\n\n  var config = {\n    velocityThreshold: 0.3,\n    directionalOffsetThreshold: 80\n  };\n\n  var remove = function remove(value) {\n    participantes.splice(participantes.indexOf(value), 1);\n    setReload(!reload);\n  };\n\n  var listaParticipantes = participantes.map(function (part) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return remove(part);\n      },\n      key: part,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.participante,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, part));\n  });\n\n  var createTorneo = function createTorneo(e) {\n    if (participantes.length > 1) {\n      alert(participantes);\n    } else {\n      alert('Debes introducir m√°s participantes!');\n    }\n  };\n\n  var newPaticipante = function newPaticipante(e) {\n    e.preventDefault();\n    participantes.push(participante);\n    setParticipante('');\n  };\n\n  return React.createElement(GestureRecognizer, {\n    style: commonStyles.compContainer,\n    onSwipeRight: function onSwipeRight() {\n      return navigation.goBack();\n    },\n    config: config,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(BackgroundImage, {\n    image: require(\"../../assets/create-padel-bg.jpg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: commonStyles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.addRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"A\\xF1adir participante...\",\n    value: participante,\n    onChangeText: function onChangeText(text) {\n      return setParticipante(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: newPaticipante,\n    style: styles.addButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.addButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"+\"))), React.createElement(View, {\n    style: styles.participantsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.scrollview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, listaParticipantes)), React.createElement(StyledButton, {\n    textColor: \"#fff\",\n    color: \"#0B569E\",\n    type: \"Crear\",\n    onPress: createTorneo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '90%',\n    height: '75%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    height: 65,\n    width: '80%',\n    backgroundColor: '#fff',\n    fontSize: 25,\n    textAlign: 'center',\n    borderColor: '#0B569E',\n    borderWidth: 5,\n    borderRadius: 15\n  },\n  row: {\n    width: '100%',\n    height: '40%',\n    margin: 5\n  },\n  participante: {\n    backgroundColor: '#fff',\n    margin: 5,\n    textAlignVertical: 'center',\n    borderRadius: 50,\n    padding: 10,\n    fontSize: 20,\n    color: '#0B569E'\n  },\n  scrollview: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    padding: 5\n  },\n  addRow: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  addButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 10\n  },\n  addButtonText: {\n    fontSize: 30,\n    backgroundColor: '#edff21',\n    color: '#0B569E',\n    width: 40,\n    height: 40,\n    borderRadius: 50,\n    textAlign: 'center',\n    textAlignVertical: 'center'\n  }\n});\nexport default CreateTournament;","map":{"version":3,"sources":["C:/Users/34628/Desktop/Apps/padel-torunaments/components/user/CreateTournament.jsx"],"names":["React","useState","useEffect","ScrollView","TextInput","GestureRecognizer","swipeDirections","BackgroundImage","StyledButton","commonStyles","CreateTournament","navigation","participante","setParticipante","participantes","setParticipantes","reload","setReload","config","velocityThreshold","directionalOffsetThreshold","remove","value","splice","indexOf","listaParticipantes","map","part","styles","createTorneo","e","length","alert","newPaticipante","preventDefault","push","compContainer","goBack","require","mainContainer","container","addRow","input","text","addButton","addButtonText","participantsContainer","row","scrollview","StyleSheet","create","width","height","justifyContent","alignItems","backgroundColor","fontSize","textAlign","borderColor","borderWidth","borderRadius","margin","textAlignVertical","padding","color","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {StyleSheet, View, Text, TouchableOpacity} from 'react-native';\r\nimport { ScrollView, TextInput } from 'react-native-gesture-handler';\r\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\r\nimport BackgroundImage from '../common/BackgroundImage';\r\nimport StyledButton from '../common/StyledButton';\r\nimport commonStyles from '../common/styles';\r\n\r\nconst CreateTournament = ({navigation}) => {\r\n\r\n    const [participante, setParticipante] = useState('')\r\n    const [participantes, setParticipantes] = useState([])\r\n    const [reload, setReload] = useState(false)\r\n\r\n\r\n    const config = {\r\n        velocityThreshold: 0.3,\r\n        directionalOffsetThreshold: 80\r\n    };\r\n\r\n    const remove = (value) => { \r\n        participantes.splice(participantes.indexOf(value), 1)\r\n        setReload(!reload)\r\n    }\r\n\r\n    const listaParticipantes = participantes.map(part => {\r\n        return(\r\n            <TouchableOpacity onPress={()=>remove(part)} key={part}>\r\n                <Text  style={styles.participante}>{part}</Text>\r\n            </TouchableOpacity>\r\n        )\r\n    })\r\n\r\n    const createTorneo = e => {\r\n        if (participantes.length > 1) {\r\n            alert(participantes)\r\n            // Aqui llamamos a la API para crear el torneo, pasando los participantes y el usuario que lo ha creado\r\n            // La API por ella sola le asignar√° un c√≥digo de acceso aleatorio\r\n            // Luego navegamos a la pantalla del torneo\r\n        }else{\r\n            alert('Debes introducir m√°s participantes!')\r\n        }\r\n    }\r\n\r\n    const newPaticipante = e => {\r\n        e.preventDefault()\r\n        participantes.push(participante)\r\n        setParticipante('')\r\n    }\r\n\r\n    return(\r\n        <GestureRecognizer \r\n            style={commonStyles.compContainer}\r\n            onSwipeRight={()=>navigation.goBack()}\r\n            config={config}>\r\n            <BackgroundImage image={require('../../assets/create-padel-bg.jpg')}/>\r\n            <View style={commonStyles.mainContainer}>\r\n                <View style={styles.container}>\r\n                    <View style={styles.addRow}>\r\n                        <TextInput style={styles.input} placeholder=\"A√±adir participante...\" value={participante} onChangeText={text => setParticipante(text)}/>\r\n                        <TouchableOpacity onPress={newPaticipante} style={styles.addButton}>\r\n                            <Text style={styles.addButtonText}>+</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <View style={styles.participantsContainer}>\r\n\r\n                    </View>\r\n                    <ScrollView style={styles.row}>\r\n                        <View style={styles.scrollview}>\r\n                            {listaParticipantes}\r\n                        </View>\r\n                    </ScrollView>\r\n                    <StyledButton textColor=\"#fff\" color=\"#0B569E\" type=\"Crear\" onPress={createTorneo}/>\r\n                    {/* <StyledButton textColor=\"#0B569E\" color=\"#edff21\" type=\"Atr√°s\" onPress={()=>navigation.push('Main')}/> */}\r\n                </View>\r\n            </View>\r\n        </GestureRecognizer>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        width: '90%',\r\n        height: '75%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    input:{\r\n        height: 65,\r\n        width: '80%',\r\n        backgroundColor: '#fff',\r\n        fontSize: 25,\r\n        textAlign: 'center',\r\n        borderColor: '#0B569E',\r\n        borderWidth: 5,\r\n        borderRadius: 15\r\n    },\r\n    row: {\r\n        width: '100%',\r\n        height: '40%',\r\n        margin: 5\r\n    },\r\n    participante:{\r\n        backgroundColor: '#fff',\r\n        margin: 5,\r\n        textAlignVertical: 'center',\r\n        borderRadius: 50,\r\n        padding:10,\r\n        fontSize: 20,\r\n        color: '#0B569E'\r\n    },\r\n    scrollview: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        padding: 5\r\n    },\r\n    addRow:{\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n    },\r\n    addButton: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: 10,\r\n    },\r\n    addButtonText:{\r\n        fontSize: 30,\r\n        backgroundColor: '#edff21',\r\n        color: '#0B569E',\r\n        width: 40,\r\n        height: 40,\r\n        borderRadius: 50,\r\n        textAlign: 'center',\r\n        textAlignVertical: 'center'\r\n    }\r\n})\r\n\r\nexport default CreateTournament;"]},"metadata":{},"sourceType":"module"}